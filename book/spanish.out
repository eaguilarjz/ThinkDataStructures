\BOOKMARK [0][-]{chapter*.1}{Prefacio}{}% 1
\BOOKMARK [1][-]{section.0.1}{0.1. Prerrequisitos}{chapter*.1}% 2
\BOOKMARK [0][-]{chapter.1}{1. Interfaces}{}% 3
\BOOKMARK [1][-]{section.1.1}{1.1. \277Por qu\351 hay dos tipos de List?}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.2}{1.2. Interfaces en Java}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.3}{1.3. La interfaz List}{chapter.1}% 6
\BOOKMARK [1][-]{section.1.4}{1.4. Ejercicio 1}{chapter.1}% 7
\BOOKMARK [0][-]{chapter.2}{2. An\341lisis de Algoritmos}{}% 8
\BOOKMARK [1][-]{section.2.1}{2.1. Ordenamiento por selecci\363n}{chapter.2}% 9
\BOOKMARK [1][-]{section.2.2}{2.2. Notaci\363n Big O}{chapter.2}% 10
\BOOKMARK [1][-]{section.2.3}{2.3. Ejercicio 2}{chapter.2}% 11
\BOOKMARK [0][-]{chapter.3}{3. ArrayList}{}% 12
\BOOKMARK [1][-]{section.3.1}{3.1. Clasificaci\363n de m\351todos de MyArrayList}{chapter.3}% 13
\BOOKMARK [1][-]{section.3.2}{3.2. Clasificaci\363n de add}{chapter.3}% 14
\BOOKMARK [1][-]{section.3.3}{3.3. Tama\361o del problema}{chapter.3}% 15
\BOOKMARK [1][-]{section.3.4}{3.4. Estructuras de datos enlazadas}{chapter.3}% 16
\BOOKMARK [1][-]{section.3.5}{3.5. Ejercicio 3}{chapter.3}% 17
\BOOKMARK [1][-]{section.3.6}{3.6. Una nota sobre la recolecci\363n de basura}{chapter.3}% 18
\BOOKMARK [0][-]{chapter.4}{4. LinkedList}{}% 19
\BOOKMARK [1][-]{section.4.1}{4.1. Clasificaci\363n de los m\351todos de MyLinkedList}{chapter.4}% 20
\BOOKMARK [1][-]{section.4.2}{4.2. Comparaci\363n entre MyArrayList y MyLinkedList}{chapter.4}% 21
\BOOKMARK [1][-]{section.4.3}{4.3. Perfilado}{chapter.4}% 22
\BOOKMARK [1][-]{section.4.4}{4.4. Interpretaci\363n de los resultados}{chapter.4}% 23
\BOOKMARK [1][-]{section.4.5}{4.5. Ejercicio 4}{chapter.4}% 24
\BOOKMARK [0][-]{chapter.5}{5. Listas de enlace doble}{}% 25
\BOOKMARK [1][-]{section.5.1}{5.1. Resultados del perfilado de desempe\361o}{chapter.5}% 26
\BOOKMARK [1][-]{section.5.2}{5.2. Perfilado de los m\351todos de LinkedList}{chapter.5}% 27
\BOOKMARK [1][-]{section.5.3}{5.3. Agregar al final de una LinkedList}{chapter.5}% 28
\BOOKMARK [1][-]{section.5.4}{5.4. Lista de enlace doble}{chapter.5}% 29
\BOOKMARK [1][-]{section.5.5}{5.5. Elecci\363n de una estructura}{chapter.5}% 30
\BOOKMARK [0][-]{chapter.6}{6. Recorrido de \341rboles}{}% 31
\BOOKMARK [1][-]{section.6.1}{6.1. Motores de b\372squeda}{chapter.6}% 32
\BOOKMARK [1][-]{section.6.2}{6.2. Interpretaci\363n del HTML}{chapter.6}% 33
\BOOKMARK [1][-]{section.6.3}{6.3. Uso de jsoup}{chapter.6}% 34
\BOOKMARK [1][-]{section.6.4}{6.4. Recorriendo el DOM}{chapter.6}% 35
\BOOKMARK [1][-]{section.6.5}{6.5. B\372squeda en profundidad}{chapter.6}% 36
\BOOKMARK [1][-]{section.6.6}{6.6. Pilas \(Stacks\) en Java}{chapter.6}% 37
\BOOKMARK [1][-]{section.6.7}{6.7. DFS Iterativa}{chapter.6}% 38
\BOOKMARK [0][-]{chapter.7}{7. Llegar a la Filosof\355a}{}% 39
\BOOKMARK [1][-]{section.7.1}{7.1. Introducci\363n}{chapter.7}% 40
\BOOKMARK [1][-]{section.7.2}{7.2. Iterables e Iterators}{chapter.7}% 41
\BOOKMARK [1][-]{section.7.3}{7.3. WikiFetcher}{chapter.7}% 42
\BOOKMARK [1][-]{section.7.4}{7.4. Ejercicio 5}{chapter.7}% 43
\BOOKMARK [0][-]{chapter.8}{8. Indexador}{}% 44
\BOOKMARK [1][-]{section.8.1}{8.1. Selecci\363n de una estructura de datos}{chapter.8}% 45
\BOOKMARK [1][-]{section.8.2}{8.2. TermCounter}{chapter.8}% 46
\BOOKMARK [1][-]{section.8.3}{8.3. Ejercicio 6}{chapter.8}% 47
\BOOKMARK [0][-]{chapter.9}{9. La interfaz Map}{}% 48
\BOOKMARK [1][-]{section.9.1}{9.1. Implementaci\363n de MyLinearMap}{chapter.9}% 49
\BOOKMARK [1][-]{section.9.2}{9.2. Ejercicio 7}{chapter.9}% 50
\BOOKMARK [1][-]{section.9.3}{9.3. An\341lisis de MyLinearMap}{chapter.9}% 51
\BOOKMARK [0][-]{chapter.10}{10. Hashing}{}% 52
\BOOKMARK [1][-]{section.10.1}{10.1. Hashing}{chapter.10}% 53
\BOOKMARK [1][-]{section.10.2}{10.2. \277C\363mo funciona el hashing?}{chapter.10}% 54
\BOOKMARK [1][-]{section.10.3}{10.3. Hashing y mutaci\363n}{chapter.10}% 55
\BOOKMARK [1][-]{section.10.4}{10.4. Ejercicio 8}{chapter.10}% 56
\BOOKMARK [0][-]{chapter.11}{11. HashMap}{}% 57
\BOOKMARK [1][-]{section.11.1}{11.1. Ejercicio 9}{chapter.11}% 58
\BOOKMARK [1][-]{section.11.2}{11.2. An\341lisis de MyHashMap}{chapter.11}% 59
\BOOKMARK [1][-]{section.11.3}{11.3. Limitaciones}{chapter.11}% 60
\BOOKMARK [1][-]{section.11.4}{11.4. Perfilado de MyHashMap}{chapter.11}% 61
\BOOKMARK [1][-]{section.11.5}{11.5. Arreglando MyHashMap}{chapter.11}% 62
\BOOKMARK [1][-]{section.11.6}{11.6. Diagramas de clases UML}{chapter.11}% 63
\BOOKMARK [0][-]{chapter.12}{12. TreeMap}{}% 64
\BOOKMARK [1][-]{section.12.1}{12.1. \277Qu\351 tiene de malo el hashing?}{chapter.12}% 65
\BOOKMARK [1][-]{section.12.2}{12.2. \301rbol binario de b\372squeda}{chapter.12}% 66
\BOOKMARK [1][-]{section.12.3}{12.3. Ejercicio 10}{chapter.12}% 67
\BOOKMARK [1][-]{section.12.4}{12.4. Implementaci\363n de un TreeMap}{chapter.12}% 68
\BOOKMARK [0][-]{chapter.13}{13. \301rbol binario de b\372squeda}{}% 69
\BOOKMARK [1][-]{section.13.1}{13.1. Un MyTreeMap simple}{chapter.13}% 70
\BOOKMARK [1][-]{section.13.2}{13.2. B\372squeda de valores}{chapter.13}% 71
\BOOKMARK [1][-]{section.13.3}{13.3. Implementaci\363n de put}{chapter.13}% 72
\BOOKMARK [1][-]{section.13.4}{13.4. Recorrido en orden}{chapter.13}% 73
\BOOKMARK [1][-]{section.13.5}{13.5. Los m\351todos logar\355tmicos}{chapter.13}% 74
\BOOKMARK [1][-]{section.13.6}{13.6. \301rboles auto-balanceables}{chapter.13}% 75
\BOOKMARK [1][-]{section.13.7}{13.7. Un ejercicio m\341s}{chapter.13}% 76
\BOOKMARK [0][-]{chapter.14}{14. Persistencia}{}% 77
\BOOKMARK [1][-]{section.14.1}{14.1. Redis}{chapter.14}% 78
\BOOKMARK [1][-]{section.14.2}{14.2. Clientes y servidores de Redis}{chapter.14}% 79
\BOOKMARK [1][-]{section.14.3}{14.3. Hacer un \355ndice respaldado por Redis}{chapter.14}% 80
\BOOKMARK [1][-]{section.14.4}{14.4. Tipos de datos de Redis}{chapter.14}% 81
\BOOKMARK [1][-]{section.14.5}{14.5. Ejercicio 11}{chapter.14}% 82
\BOOKMARK [1][-]{section.14.6}{14.6. M\341s sugerencias si las quieres}{chapter.14}% 83
\BOOKMARK [1][-]{section.14.7}{14.7. Unos cuantos tips de dise\361o}{chapter.14}% 84
\BOOKMARK [0][-]{chapter.15}{15. Rastreo de Wikipedia}{}% 85
\BOOKMARK [1][-]{section.15.1}{15.1. El indexador respaldado por Redis}{chapter.15}% 86
\BOOKMARK [1][-]{section.15.2}{15.2. An\341lisis de la b\372squeda}{chapter.15}% 87
\BOOKMARK [1][-]{section.15.3}{15.3. An\341lisis de la indexaci\363n}{chapter.15}% 88
\BOOKMARK [1][-]{section.15.4}{15.4. Recorrido de grafos}{chapter.15}% 89
\BOOKMARK [1][-]{section.15.5}{15.5. Ejercicio 12}{chapter.15}% 90
\BOOKMARK [0][-]{chapter.16}{16. B\372squeda booleana}{}% 91
\BOOKMARK [1][-]{section.16.1}{16.1. Soluci\363n del rastreador}{chapter.16}% 92
\BOOKMARK [1][-]{section.16.2}{16.2. Recuperaci\363n de informaci\363n}{chapter.16}% 93
\BOOKMARK [1][-]{section.16.3}{16.3. B\372squeda boolena}{chapter.16}% 94
\BOOKMARK [1][-]{section.16.4}{16.4. Ejercicio 13}{chapter.16}% 95
\BOOKMARK [1][-]{section.16.5}{16.5. Comparable y Comparator}{chapter.16}% 96
\BOOKMARK [1][-]{section.16.6}{16.6. Extensiones}{chapter.16}% 97
\BOOKMARK [0][-]{chapter.17}{17. Ordenamiento}{}% 98
\BOOKMARK [1][-]{section.17.1}{17.1. Ordenamiento por inserci\363n}{chapter.17}% 99
\BOOKMARK [1][-]{section.17.2}{17.2. Ejercicio 14}{chapter.17}% 100
\BOOKMARK [1][-]{section.17.3}{17.3. An\341lisis del ordenamiento por mezcla}{chapter.17}% 101
\BOOKMARK [1][-]{section.17.4}{17.4. Ordenamiento radix}{chapter.17}% 102
\BOOKMARK [1][-]{section.17.5}{17.5. Ordenamiento por mont\355culos}{chapter.17}% 103
\BOOKMARK [1][-]{section.17.6}{17.6. Mont\355culo acotado}{chapter.17}% 104
\BOOKMARK [1][-]{section.17.7}{17.7. Complejidad espacial}{chapter.17}% 105
\BOOKMARK [0][-]{chapter*.5}{\315ndice}{}% 106
